
/*
 * This file was automatically generated by EvoSuite
 */
package bytevector;

import org.junit.jupiter.api.Test;

import static org.junit.Assert.*;

public class ByteVectorTest {

  @Test
  public void testPutByte() {
      ByteVector byteVector = new ByteVector();
      assertNotNull(byteVector);

      byteVector.putByte(1);
      assertEquals(1, byteVector.length);
  }

  @Test
  public void testPutShort() {
      ByteVector byteVector = new ByteVector();
      assertNotNull(byteVector);

      byteVector.putShort(2);
      assertEquals(2, byteVector.length);
  }

  @Test
  public void testPutInt() {
      ByteVector byteVector = new ByteVector();
      assertNotNull(byteVector);

      byteVector.putInt(3);
      assertEquals(4, byteVector.length);
  }

  @Test
  public void testPutLong() {
      ByteVector byteVector = new ByteVector();
      assertNotNull(byteVector);

      byteVector.putLong(123456789L);
      assertEquals(8, byteVector.length);
  }


  @Test
  public void testPutByteArray() {
      ByteVector byteVector = new ByteVector();
      assertNotNull(byteVector);

      byte[] byteArray = {1, 2, 3, 4};
      byteVector.putByteArray(byteArray, 0, 4);
      assertEquals(4, byteVector.length);
  }

  @Test
  public void testPutEmptyByteArray() {
      ByteVector byteVector = new ByteVector();
      assertNotNull(byteVector);

      byte[] emptyArray = {};
      byteVector.putByteArray(emptyArray, 0, 0);
      assertEquals(0, byteVector.length);
  }

  @Test
  public void testPutUTF8WithSpecialCharacters() {
      ByteVector byteVector = new ByteVector();
      assertNotNull(byteVector);

      byteVector.putUTF8("special_characters_!@#$%^&*()");
      assertEquals(31, byteVector.length);
  }

  @Test
  public void testPutNegativeByte() {
      ByteVector byteVector = new ByteVector();
      assertNotNull(byteVector);

      byteVector.putByte(-1);
      assertEquals(1, byteVector.length);
  }
}